name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Add a MySQL service for testing
  build-and-test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_DATABASE: crombie_marketplace_test
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Generate Prisma client
        run: npx prisma generate

      # Uncomment if you have linting
      # - name: Run linting
      #   run: npm run lint
        
      # Uncomment if you have tests
      # - name: Run tests
      #   run: npm test
      #   env:
      #     DATABASE_URL: mysql://root:password@localhost:3306/crombie_marketplace_test
      
      # - name: Build application
      #   run: npm run build
      #   env:
      #     DATABASE_URL: ${{ secrets.DATABASE_URL }}
      
      # If tests and build pass, proceed to deployment (on main branch only)
      - name: Set up condition for deployment
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        id: deploy-condition
        run: echo "should_deploy=true" >> $GITHUB_OUTPUT

  deploy-to-cloud-run:
    needs: build-and-test
    if: needs.build-and-test.outputs.should_deploy == 'true'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
          
      - name: Authenticate n with Artifact Registry
        run: gcloud auth configure-docker us-central1-docker.pkg.dev
        
      - name: Build and push image to Artifact Registry
        run: |
          docker build -t us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/mi-repo/crombie-marketplace:${{ github.sha }} .
          docker push us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/mi-repo/crombie-marketplace:${{ github.sha }}
          
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy crombie-marketplace \
            --image us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/mi-repo/crombie-marketplace:${{ github.sha }} \
            --platform managed \
            --region us-central1 \
            --allow-unauthenticated \
            --service-account github-actions@${{ secrets.GCP_PROJECT }}.iam.gserviceaccount.com \
            --set-env-vars "NODE_ENV=production" \
            --set-env-vars "DATABASE_URL=${{ secrets.DATABASE_URL }}" \
            --set-env-vars "JWT_SECRET=${{ secrets.JWT_SECRET }}" \
            --set-env-vars "GCP_STORAGE_BUCKET=${{ secrets.GCP_STORAGE_BUCKET }}"